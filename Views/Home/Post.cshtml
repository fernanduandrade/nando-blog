@model Post

@{
    ViewBag.Title = Model.Title;
    ViewBag.Description = Model.Description;
    ViewBag.Keywords = $"{Model.Tags?.Replace(",", " ")} {Model.Category}";
    var basePath = Context.Request.PathBase;

}


<div class="post__section">
    <div class="heading__post">
        <form>
            <button class="pagination__link mt-sm" asp-action="Index" asp-controller="Home">&#8592; voltar</button>
        </form>
        
        @{
            DateTime today = DateTime.Now;
            TimeSpan days = Model.Created.Subtract(today);
            int daysAgo = Math.Abs((int)days.TotalDays);
        }   

        @if(daysAgo == 0) {
            <div class="ml-sm">
                <form>
                    <span>hoje em em</span> <button asp-controller="Home" asp-action="Index" asp-route-category="@Model.Category" class="post__category" title="@Model.Category">@Model.Category</button>
                </form>
            </div>
        }
        else
        {
            <div class="ml-sm"> 
                <form>    
                    <span>@daysAgo dias atrás em</span> <button asp-controller="Home" asp-action="Index" asp-route-category="@Model.Category" class="post__category" title="@Model.Category">@Model.Category</button>
                </form>
            </div>
        }
    </div>
    
    
    
    @* <div class=""> 
        @if (!String.IsNullOrEmpty(Model.Image))
        {
            var imgPath = $"{basePath}/Image/{Model.Image}";
            <img src="@imgPath"/>
            
        }
    </div> *@

    <div class="post__body">
        <h1 class="heading__title mb-sm">@Model.Title</h1>
        @Html.Raw(@Model.Body)
    </div>
    <div class="comment mb-sm">
        <div class="comment__add">
            @{
                await Html.RenderPartialAsync("_MainComment", new CommentViewModel {PostId = Model.Id, MainCommentId = 0});
            }
        </div>
        <button class="btn__add" onclick="showTextArea('.comment__add')">Adicionar comentário &plus;</button>
        @foreach (var comment in Model.MainComments)
        {
            <div class="comment__section">
                <time class="comment__date">@comment.Created.ToString("dd/MM/yyyy - HH:mm")</time>
                <p class="comment__text">
                    @comment.Message
                </p>

                @* <div class="comment__section--subcomment">
                    @foreach (var subcomment in comment.SubComments)
                    {
                        <div>
                            <time class="comment__date">@subcomment.Created.ToString("dd/MM/yyyy - HH:mm")</time>
                            <p class="comment__text">
                                @subcomment.Message
                            </p>
                        </div>
                        <button class="btn__add" onclick="showTextArea('.subcomment__add')">Responder comentário </button>
                    }

                    <div class="subcomment__add">
                        @{
                            await Html.RenderPartialAsync("_MainComment", new CommentViewModel {PostId = Model.Id, MainCommentId = comment.Id});
                        }
                    </div>
                </div> *@
            </div>
        }
    </div>
</div>
<script>
    const showTextArea = element => document.querySelector(element).style.display = 'block';
</script>